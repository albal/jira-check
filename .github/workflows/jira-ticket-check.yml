name: Jira Ticket Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-jira-tickets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to access all commits

      - name: Check Jira tickets in commits
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          #!/bin/bash
          set -e
          
          echo "üîç Checking Jira tickets in PR commits..."
          echo ""
          echo "üìã Ticket Pattern: [A-Z]+-[0-9]+"
          echo "‚úÖ Valid Statuses: In Progress, In Development, In Review, Done, Closed, Resolved"
          echo ""
          
          # Check if Jira credentials are set
          if [ -z "$JIRA_BASE_URL" ] || [ -z "$JIRA_EMAIL" ] || [ -z "$JIRA_API_TOKEN" ]; then
            echo "‚ùå Error: Jira credentials not configured"
            echo "Please set JIRA_BASE_URL, JIRA_EMAIL, and JIRA_API_TOKEN secrets"
            exit 1
          fi
          
          # Get the base branch
          BASE_SHA=$(git merge-base origin/${{ github.base_ref }} HEAD)
          
          # Get all commits in the PR (excluding merge commits)
          COMMITS=$(git log $BASE_SHA..HEAD --no-merges --pretty=format:"%H|%s")
          
          if [ -z "$COMMITS" ]; then
            echo "‚ö†Ô∏è  No commits found in this PR"
            exit 1
          fi
          
          COMMIT_COUNT=$(echo "$COMMITS" | wc -l)
          echo "Found $COMMIT_COUNT commit(s) to check (excluding merge commits)"
          echo ""
          
          HAS_ERRORS=false
          INVALID_COMMITS=()
          
          # Function to check Jira ticket status
          check_jira_ticket() {
            local ticket_id=$1
            local auth=$(echo -n "$JIRA_EMAIL:$JIRA_API_TOKEN" | base64)
            
            # Remove trailing slash from JIRA_BASE_URL if present
            local base_url="${JIRA_BASE_URL%/}"
            
            response=$(curl -s -w "\n%{http_code}" --max-time 10 \
              -H "Authorization: Basic $auth" \
              -H "Accept: application/json" \
              "$base_url/rest/api/3/issue/$ticket_id" 2>&1)
            
            http_code=$(echo "$response" | tail -n1)
            body=$(echo "$response" | sed '$d')
            
            # Check if http_code is a valid number
            if ! [[ "$http_code" =~ ^[0-9]+$ ]]; then
              # If not a number, it's likely a curl error
              echo "error|Connection failed: $http_code"
              return
            fi
            
            if [ "$http_code" = "200" ]; then
              status=$(echo "$body" | grep -o '"status":{[^}]*"name":"[^"]*"' | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
              echo "$http_code|$status"
            else
              echo "$http_code|"
            fi
          }
          
          # Function to check if status is valid
          is_valid_status() {
            local status=$(echo "$1" | tr '[:upper:]' '[:lower:]')
            case "$status" in
              "in progress"|"in development"|"in review"|"done"|"closed"|"resolved")
                return 0
                ;;
              *)
                return 1
                ;;
            esac
          }
          
          # Process each commit
          while IFS='|' read -r commit_hash commit_msg; do
            short_hash=${commit_hash:0:7}
            echo "üìù Commit $short_hash: $commit_msg"
            
            # Extract Jira ticket IDs (pattern: AAAA-NNNN)
            tickets=$(echo "$commit_msg" | grep -oE '[A-Z]+-[0-9]+' | sort -u)
            
            if [ -z "$tickets" ]; then
              echo "   ‚ùå No Jira ticket found in commit message"
              echo ""
              HAS_ERRORS=true
              INVALID_COMMITS+=("$short_hash: No Jira ticket found")
              continue
            fi
            
            echo "   üé´ Found ticket(s): $(echo $tickets | tr '\n' ' ')"
            
            commit_valid=true
            
            # Check each ticket
            while IFS= read -r ticket; do
              [ -z "$ticket" ] && continue
              
              result=$(check_jira_ticket "$ticket")
              http_code=$(echo "$result" | cut -d'|' -f1)
              status=$(echo "$result" | cut -d'|' -f2-)
              
              if [ "$http_code" = "error" ]; then
                echo "   ‚ùå Connection error: $status"
                HAS_ERRORS=true
                commit_valid=false
                INVALID_COMMITS+=("$short_hash: Connection error checking ticket $ticket")
              elif [ "$http_code" = "401" ]; then
                echo "   ‚ùå Authentication failed for ticket $ticket"
                echo "   ‚ÑπÔ∏è  Check your JIRA_EMAIL and JIRA_API_TOKEN"
                HAS_ERRORS=true
                commit_valid=false
                INVALID_COMMITS+=("$short_hash: Authentication failed")
              elif [ "$http_code" = "404" ]; then
                echo "   ‚ùå Ticket $ticket does not exist"
                HAS_ERRORS=true
                commit_valid=false
                INVALID_COMMITS+=("$short_hash: Ticket $ticket does not exist")
              elif [ "$http_code" = "200" ]; then
                if is_valid_status "$status"; then
                  echo "   ‚úÖ Ticket $ticket is valid (Status: $status)"
                  echo "   üîó ${JIRA_BASE_URL%/}/browse/$ticket"
                else
                  echo "   ‚ùå Ticket $ticket has invalid status: $status"
                  echo "   üîó ${JIRA_BASE_URL%/}/browse/$ticket"
                  HAS_ERRORS=true
                  commit_valid=false
                  INVALID_COMMITS+=("$short_hash: Ticket $ticket has invalid status: $status")
                fi
              else
                echo "   ‚ùå Error checking ticket $ticket: HTTP $http_code"
                HAS_ERRORS=true
                commit_valid=false
                INVALID_COMMITS+=("$short_hash: Error checking ticket $ticket")
              fi
            done <<< "$tickets"
            
            echo ""
          done <<< "$COMMITS"
          
          # Summary
          echo "============================================================"
          echo "üìä SUMMARY"
          echo "============================================================"
          echo ""
          
          if [ "$HAS_ERRORS" = true ]; then
            echo "‚ùå PR validation FAILED"
            echo ""
            echo "Invalid commits:"
            for item in "${INVALID_COMMITS[@]}"; do
              echo "  - $item"
            done
            echo ""
            exit 1
          else
            echo "‚úÖ All commits have valid Jira tickets!"
            echo ""
            exit 0
          fi
